/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as McpServersIndexRouteImport } from './routes/mcp-servers/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as ChatsIndexRouteImport } from './routes/chats/index'
import { Route as AgentsIndexRouteImport } from './routes/agents/index'
import { Route as AgentIndexRouteImport } from './routes/agent/index'
import { Route as SettingsLayoutRouteImport } from './routes/settings/_layout'
import { Route as ChatChatIdRouteImport } from './routes/chat/$chatId'
import { Route as AgentAgentIdRouteImport } from './routes/agent/$agentId'
import { Route as SettingsLayoutSecurityRouteImport } from './routes/settings/_layout.security'
import { Route as SettingsLayoutPrivacyRouteImport } from './routes/settings/_layout.privacy'
import { Route as SettingsLayoutDataRouteImport } from './routes/settings/_layout.data'
import { Route as SettingsLayoutBillingRouteImport } from './routes/settings/_layout.billing'
import { Route as SettingsLayoutAppearanceRouteImport } from './routes/settings/_layout.appearance'
import { Route as SettingsLayoutAccountRouteImport } from './routes/settings/_layout.account'

const SettingsRouteImport = createFileRoute('/settings')()

const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const McpServersIndexRoute = McpServersIndexRouteImport.update({
  id: '/mcp-servers/',
  path: '/mcp-servers/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatsIndexRoute = ChatsIndexRouteImport.update({
  id: '/chats/',
  path: '/chats/',
  getParentRoute: () => rootRouteImport,
} as any)
const AgentsIndexRoute = AgentsIndexRouteImport.update({
  id: '/agents/',
  path: '/agents/',
  getParentRoute: () => rootRouteImport,
} as any)
const AgentIndexRoute = AgentIndexRouteImport.update({
  id: '/agent/',
  path: '/agent/',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsLayoutRoute = SettingsLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => SettingsRoute,
} as any)
const ChatChatIdRoute = ChatChatIdRouteImport.update({
  id: '/chat/$chatId',
  path: '/chat/$chatId',
  getParentRoute: () => rootRouteImport,
} as any)
const AgentAgentIdRoute = AgentAgentIdRouteImport.update({
  id: '/agent/$agentId',
  path: '/agent/$agentId',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsLayoutSecurityRoute = SettingsLayoutSecurityRouteImport.update({
  id: '/security',
  path: '/security',
  getParentRoute: () => SettingsLayoutRoute,
} as any)
const SettingsLayoutPrivacyRoute = SettingsLayoutPrivacyRouteImport.update({
  id: '/privacy',
  path: '/privacy',
  getParentRoute: () => SettingsLayoutRoute,
} as any)
const SettingsLayoutDataRoute = SettingsLayoutDataRouteImport.update({
  id: '/data',
  path: '/data',
  getParentRoute: () => SettingsLayoutRoute,
} as any)
const SettingsLayoutBillingRoute = SettingsLayoutBillingRouteImport.update({
  id: '/billing',
  path: '/billing',
  getParentRoute: () => SettingsLayoutRoute,
} as any)
const SettingsLayoutAppearanceRoute =
  SettingsLayoutAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => SettingsLayoutRoute,
  } as any)
const SettingsLayoutAccountRoute = SettingsLayoutAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => SettingsLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/agent/$agentId': typeof AgentAgentIdRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/settings': typeof SettingsLayoutRouteWithChildren
  '/agent': typeof AgentIndexRoute
  '/agents': typeof AgentsIndexRoute
  '/chats': typeof ChatsIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/mcp-servers': typeof McpServersIndexRoute
  '/settings/account': typeof SettingsLayoutAccountRoute
  '/settings/appearance': typeof SettingsLayoutAppearanceRoute
  '/settings/billing': typeof SettingsLayoutBillingRoute
  '/settings/data': typeof SettingsLayoutDataRoute
  '/settings/privacy': typeof SettingsLayoutPrivacyRoute
  '/settings/security': typeof SettingsLayoutSecurityRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/agent/$agentId': typeof AgentAgentIdRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/settings': typeof SettingsLayoutRouteWithChildren
  '/agent': typeof AgentIndexRoute
  '/agents': typeof AgentsIndexRoute
  '/chats': typeof ChatsIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/mcp-servers': typeof McpServersIndexRoute
  '/settings/account': typeof SettingsLayoutAccountRoute
  '/settings/appearance': typeof SettingsLayoutAppearanceRoute
  '/settings/billing': typeof SettingsLayoutBillingRoute
  '/settings/data': typeof SettingsLayoutDataRoute
  '/settings/privacy': typeof SettingsLayoutPrivacyRoute
  '/settings/security': typeof SettingsLayoutSecurityRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/agent/$agentId': typeof AgentAgentIdRoute
  '/chat/$chatId': typeof ChatChatIdRoute
  '/settings': typeof SettingsRouteWithChildren
  '/settings/_layout': typeof SettingsLayoutRouteWithChildren
  '/agent/': typeof AgentIndexRoute
  '/agents/': typeof AgentsIndexRoute
  '/chats/': typeof ChatsIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/mcp-servers/': typeof McpServersIndexRoute
  '/settings/_layout/account': typeof SettingsLayoutAccountRoute
  '/settings/_layout/appearance': typeof SettingsLayoutAppearanceRoute
  '/settings/_layout/billing': typeof SettingsLayoutBillingRoute
  '/settings/_layout/data': typeof SettingsLayoutDataRoute
  '/settings/_layout/privacy': typeof SettingsLayoutPrivacyRoute
  '/settings/_layout/security': typeof SettingsLayoutSecurityRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/agent/$agentId'
    | '/chat/$chatId'
    | '/settings'
    | '/agent'
    | '/agents'
    | '/chats'
    | '/dashboard'
    | '/mcp-servers'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/billing'
    | '/settings/data'
    | '/settings/privacy'
    | '/settings/security'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/agent/$agentId'
    | '/chat/$chatId'
    | '/settings'
    | '/agent'
    | '/agents'
    | '/chats'
    | '/dashboard'
    | '/mcp-servers'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/billing'
    | '/settings/data'
    | '/settings/privacy'
    | '/settings/security'
  id:
    | '__root__'
    | '/'
    | '/agent/$agentId'
    | '/chat/$chatId'
    | '/settings'
    | '/settings/_layout'
    | '/agent/'
    | '/agents/'
    | '/chats/'
    | '/dashboard/'
    | '/mcp-servers/'
    | '/settings/_layout/account'
    | '/settings/_layout/appearance'
    | '/settings/_layout/billing'
    | '/settings/_layout/data'
    | '/settings/_layout/privacy'
    | '/settings/_layout/security'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AgentAgentIdRoute: typeof AgentAgentIdRoute
  ChatChatIdRoute: typeof ChatChatIdRoute
  SettingsRoute: typeof SettingsRouteWithChildren
  AgentIndexRoute: typeof AgentIndexRoute
  AgentsIndexRoute: typeof AgentsIndexRoute
  ChatsIndexRoute: typeof ChatsIndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  McpServersIndexRoute: typeof McpServersIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mcp-servers/': {
      id: '/mcp-servers/'
      path: '/mcp-servers'
      fullPath: '/mcp-servers'
      preLoaderRoute: typeof McpServersIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chats/': {
      id: '/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof ChatsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agents/': {
      id: '/agents/'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof AgentsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agent/': {
      id: '/agent/'
      path: '/agent'
      fullPath: '/agent'
      preLoaderRoute: typeof AgentIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/_layout': {
      id: '/settings/_layout'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsLayoutRouteImport
      parentRoute: typeof SettingsRoute
    }
    '/chat/$chatId': {
      id: '/chat/$chatId'
      path: '/chat/$chatId'
      fullPath: '/chat/$chatId'
      preLoaderRoute: typeof ChatChatIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/agent/$agentId': {
      id: '/agent/$agentId'
      path: '/agent/$agentId'
      fullPath: '/agent/$agentId'
      preLoaderRoute: typeof AgentAgentIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings/_layout/security': {
      id: '/settings/_layout/security'
      path: '/security'
      fullPath: '/settings/security'
      preLoaderRoute: typeof SettingsLayoutSecurityRouteImport
      parentRoute: typeof SettingsLayoutRoute
    }
    '/settings/_layout/privacy': {
      id: '/settings/_layout/privacy'
      path: '/privacy'
      fullPath: '/settings/privacy'
      preLoaderRoute: typeof SettingsLayoutPrivacyRouteImport
      parentRoute: typeof SettingsLayoutRoute
    }
    '/settings/_layout/data': {
      id: '/settings/_layout/data'
      path: '/data'
      fullPath: '/settings/data'
      preLoaderRoute: typeof SettingsLayoutDataRouteImport
      parentRoute: typeof SettingsLayoutRoute
    }
    '/settings/_layout/billing': {
      id: '/settings/_layout/billing'
      path: '/billing'
      fullPath: '/settings/billing'
      preLoaderRoute: typeof SettingsLayoutBillingRouteImport
      parentRoute: typeof SettingsLayoutRoute
    }
    '/settings/_layout/appearance': {
      id: '/settings/_layout/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof SettingsLayoutAppearanceRouteImport
      parentRoute: typeof SettingsLayoutRoute
    }
    '/settings/_layout/account': {
      id: '/settings/_layout/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof SettingsLayoutAccountRouteImport
      parentRoute: typeof SettingsLayoutRoute
    }
  }
}

interface SettingsLayoutRouteChildren {
  SettingsLayoutAccountRoute: typeof SettingsLayoutAccountRoute
  SettingsLayoutAppearanceRoute: typeof SettingsLayoutAppearanceRoute
  SettingsLayoutBillingRoute: typeof SettingsLayoutBillingRoute
  SettingsLayoutDataRoute: typeof SettingsLayoutDataRoute
  SettingsLayoutPrivacyRoute: typeof SettingsLayoutPrivacyRoute
  SettingsLayoutSecurityRoute: typeof SettingsLayoutSecurityRoute
}

const SettingsLayoutRouteChildren: SettingsLayoutRouteChildren = {
  SettingsLayoutAccountRoute: SettingsLayoutAccountRoute,
  SettingsLayoutAppearanceRoute: SettingsLayoutAppearanceRoute,
  SettingsLayoutBillingRoute: SettingsLayoutBillingRoute,
  SettingsLayoutDataRoute: SettingsLayoutDataRoute,
  SettingsLayoutPrivacyRoute: SettingsLayoutPrivacyRoute,
  SettingsLayoutSecurityRoute: SettingsLayoutSecurityRoute,
}

const SettingsLayoutRouteWithChildren = SettingsLayoutRoute._addFileChildren(
  SettingsLayoutRouteChildren,
)

interface SettingsRouteChildren {
  SettingsLayoutRoute: typeof SettingsLayoutRouteWithChildren
}

const SettingsRouteChildren: SettingsRouteChildren = {
  SettingsLayoutRoute: SettingsLayoutRouteWithChildren,
}

const SettingsRouteWithChildren = SettingsRoute._addFileChildren(
  SettingsRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AgentAgentIdRoute: AgentAgentIdRoute,
  ChatChatIdRoute: ChatChatIdRoute,
  SettingsRoute: SettingsRouteWithChildren,
  AgentIndexRoute: AgentIndexRoute,
  AgentsIndexRoute: AgentsIndexRoute,
  ChatsIndexRoute: ChatsIndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  McpServersIndexRoute: McpServersIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
